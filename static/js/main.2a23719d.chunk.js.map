{"version":3,"sources":["components/ViewerTemplate/ViewerTemplate.js","components/ViewerTemplate/index.js","components/SpaceNavigator/SpaceNavigator.js","components/SpaceNavigator/index.js","components/Viewer/Viewer.js","components/Viewer/index.js","config/index.js","api/index.js","App.js","index.js"],"names":["cx","classNames","bind","styled","ViewerTemplate","_ref","viewer","spaceNavigator","react_default","a","createElement","className","styles","SpaceNavigator","onPrev","onNext","onClick","md","Viewer","date","mediaType","url","loading","dist","color","size","window","open","src","alt","title","frameBorder","allow","allowFullScreen","cfg","key","getAPOD","arguments","length","undefined","axios","get","concat","App","state","maxDate","getData","_callee","_ref2","_ref2$data","retrievedDate","regenerator_default","wrap","_context","prev","next","_this","abrupt","setState","sent","data","media_type","t0","console","error","finish","stop","this","handlePrev","prevDate","moment","subtract","format","handleNext","_this$state","nextDate","add","_this$state2","components_ViewerTemplate","components_SpaceNavigator","components_Viewer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2a23719d.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from './ViewerTemplate.scss';\r\nimport classNames from 'classnames/bind';\r\n\r\nconst cx = classNames.bind(styled);\r\n\r\nconst ViewerTemplate = ({ viewer, spaceNavigator }) => (\r\n    <div className={cx('viewer-template')}>\r\n        <header>\r\n            오늘의 우주 사진\r\n            </header>\r\n        <div className={cx('viewer-wrapper')}>\r\n            {viewer}\r\n            <div className={cx('space-navigator-wrapper')}>\r\n                {spaceNavigator}\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n);\r\n\r\n\r\nexport default ViewerTemplate;","import ViewerTemplate from './ViewerTemplate'\r\n\r\nexport default ViewerTemplate","import React from 'react';\r\nimport styles from './SpaceNavigator.scss';\r\nimport classNames from 'classnames/bind';\r\nimport { MdArrowBack, MdArrowForward } from 'react-icons/md'\r\n\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst SpaceNavigator = ({ onPrev, onNext }) =>\r\n    (\r\n        <div className={cx('space-navigator')}>\r\n            <div className={cx('left', 'end')}>\r\n                <div className={cx('circle')} onClick={onPrev}>\r\n                    <MdArrowBack />\r\n                </div>\r\n            </div>\r\n            <div className={cx('right', 'end')}>\r\n                <div className={cx('circle')} onClick={onNext}>\r\n                    <MdArrowForward />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\nexport default SpaceNavigator;","import SpaceNavigator from './SpaceNavigator';\r\n\r\nexport default SpaceNavigator;","import React from 'react';\r\nimport styles from './Viewer.scss';\r\nimport classNames from 'classnames/bind';\r\nimport { ChasingDots } from 'better-react-spinkit'\r\n\r\nconst cx = classNames.bind(styles);\r\n\r\nconst Viewer = ({ date, mediaType, url, loading }) =>\r\n    (\r\n        <div className={cx('viewer')}>\r\n            <h2 className={cx('viewer-date')}>{date}</h2>\r\n            {loading ? (\r\n                <ChasingDots color=\"white\" size={60} />\r\n            ) : (\r\n                    mediaType === 'image' ? (\r\n                        <img onClick={() => window.open(url)} src={url} alt=\"우주사진\" />\r\n                    ) : (\r\n                            <iframe title=\"space-video\" src={url} frameBorder=\"0\" allow=\"autoplay; encrypted-media\" allowFullScreen></iframe>\r\n                        )\r\n                )}\r\n        </div>\r\n\r\n    )\r\n\r\nexport default Viewer;","import Viewer from './Viewer'\r\n\r\n\r\nexport default Viewer","const cfg = {\r\n    key: \"HQhLd9jyuS119rZecHTaNmVUJNxoHHuKi7due4VI\"\r\n}\r\n\r\nexport default cfg","import axios from 'axios';\r\nimport cfg from '../config'\r\n\r\n\r\nexport const getAPOD = (date = '') => axios.get(`https://api.nasa.gov/planetary/apod?api_key=${cfg.key}&date=${date}`)","import React, { Component } from 'react';\nimport moment from 'moment';\nimport ViewerTemplate from './components/ViewerTemplate';\nimport SpaceNavigator from './components/SpaceNavigator'\nimport Viewer from './components/Viewer';\nimport { getAPOD } from './api'\n\nclass App extends Component {\n  state = {\n    loading: false,\n    maxDate: null,\n    date: null,\n    url: null,\n    mediaType: null\n  }\n  getData = async (date) => {\n    if (this.state.loading) return;\n\n    this.setState({\n      loading: true\n    });\n\n    try {\n      const { data: { date: retrievedDate, url, media_type: mediaType } } = await getAPOD(date);\n      if (!this.state.maxDate) {\n        this.setState({\n          maxDate: retrievedDate\n        })\n      }\n\n      this.setState({\n        date: retrievedDate,\n        mediaType,\n        url\n      });\n\n    } catch (e) {\n      console.error(e)\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  handlePrev = () => {\n    const { date } = this.state;\n    const prevDate = moment(date).subtract(1, 'days').format('YYYY-MM-DD');\n    this.getData(prevDate);\n  }\n\n  handleNext = () => {\n    const { date, maxDate } = this.state;\n    if (date === maxDate) return;\n\n    const nextDate = moment(date).add(1, 'days').format('YYYY-MM-DD');\n    this.getData(nextDate);\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  render() {\n    const { url, mediaType, date, loading } = this.state;\n    const { handleNext, handlePrev } = this;\n\n    return (\n      <div className=\"App\">\n        <ViewerTemplate\n          spaceNavigator={<SpaceNavigator onPrev={handlePrev} onNext={handleNext} />}\n          viewer={(\n            <Viewer\n              date={date}\n              url={url}\n              mediaType={mediaType}\n              loading={loading}\n            />\n          )}\n\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/base.scss'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}